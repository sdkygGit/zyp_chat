//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.1.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.yxst.epic.unifyplatform.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.app.ActivityCompat;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.yxst.epic.unifyplatform.DB.XmppMessage;
import com.yxst.epic.unifyplatform.R.dimen;
import com.yxst.epic.unifyplatform.R.id;
import com.yxst.epic.unifyplatform.R.layout;
import com.yxst.epic.unifyplatform.apppush.OperationRest_;
import com.yxst.epic.unifyplatform.dto.response.GetAppOperationListResponse;
import com.yxst.epic.unifyplatform.dto.response.Response;
import com.yxst.epic.unifyplatform.rest.Appmsgsrv8094_;
import com.yxst.epic.unifyplatform.view.AudioRecorderButton;
import com.yxst.epic.unifyplatform.view.BiaoQingView;
import com.yxst.epic.unifyplatform.view.EmoticonsEditText;
import com.yxst.epic.unifyplatform.view.xlist.XListView;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class XchatActivity_
    extends XchatActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String REMOTE_USER_NAME_EXTRA = "remoteUserName";
    public final static String REMOTE_USER_NICK_EXTRA = "remoteUserNick";
    public final static String CHAT_TYPE_EXTRA = "chatType";
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_chatx);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        Resources resources_ = this.getResources();
        sizeBigger = resources_.getDimensionPixelOffset(dimen.icon_size_bigger);
        operationRest = new OperationRest_(this);
        myRestClient = new Appmsgsrv8094_(this);
        injectExtras_();
        afterInject();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static XchatActivity_.IntentBuilder_ intent(Context context) {
        return new XchatActivity_.IntentBuilder_(context);
    }

    public static XchatActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new XchatActivity_.IntentBuilder_(fragment);
    }

    public static XchatActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new XchatActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        chat_appmenu_layout = ((LinearLayout) hasViews.findViewById(id.chat_appmenu_layout));
        edit_user_comment = ((EmoticonsEditText) hasViews.findViewById(id.edit_user_comment));
        btn_chat_send = ((Button) hasViews.findViewById(id.btn_chat_send));
        layout_add = ((LinearLayout) hasViews.findViewById(id.layout_add));
        btn_changedto_appmenu = ((ImageButton) hasViews.findViewById(id.btn_changedto_appmenu));
        viewBiaoQing = ((BiaoQingView) hasViews.findViewById(id.viewBiaoQing));
        layout_more = ((LinearLayout) hasViews.findViewById(id.layout_more));
        layout_custommenu = ((LinearLayout) hasViews.findViewById(id.layout_custommenu));
        btn_chat_voice = ((Button) hasViews.findViewById(id.btn_chat_voice));
        btn_speak = ((AudioRecorderButton) hasViews.findViewById(id.btn_speak));
        btn_chat_keyboard = ((Button) hasViews.findViewById(id.btn_chat_keyboard));
        layout_emo = ((LinearLayout) hasViews.findViewById(id.layout_emo));
        tv_camera = ((TextView) hasViews.findViewById(id.tv_camera));
        mListView = ((XListView) hasViews.findViewById(id.mListView));
        btn_chat_add = ((Button) hasViews.findViewById(id.btn_chat_add));
        tv_picture = ((TextView) hasViews.findViewById(id.tv_picture));
        btn_mmfooter_listtotext = ((ImageButton) hasViews.findViewById(id.btn_mmfooter_listtotext));
        btn_chat_emo = ((Button) hasViews.findViewById(id.btn_chat_emo));
        chat_normal_layout = ((LinearLayout) hasViews.findViewById(id.chat_normal_layout));
        tv_location = ((TextView) hasViews.findViewById(id.tv_location));
        if (btn_mmfooter_listtotext!= null) {
            btn_mmfooter_listtotext.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onChangLayoutClick(view);
                }

            }
            );
        }
        if (btn_changedto_appmenu!= null) {
            btn_changedto_appmenu.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onChangLayoutClick(view);
                }

            }
            );
        }
        if (btn_chat_add!= null) {
            btn_chat_add.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onClick(view);
                }

            }
            );
        }
        if (btn_chat_emo!= null) {
            btn_chat_emo.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onClick(view);
                }

            }
            );
        }
        if (btn_chat_voice!= null) {
            btn_chat_voice.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onClick(view);
                }

            }
            );
        }
        if (btn_chat_keyboard!= null) {
            btn_chat_keyboard.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onClick(view);
                }

            }
            );
        }
        if (btn_chat_send!= null) {
            btn_chat_send.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onClick(view);
                }

            }
            );
        }
        if (edit_user_comment!= null) {
            edit_user_comment.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onClick(view);
                }

            }
            );
        }
        if (tv_picture!= null) {
            tv_picture.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onClick(view);
                }

            }
            );
        }
        if (tv_camera!= null) {
            tv_camera.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onClick(view);
                }

            }
            );
        }
        if (tv_location!= null) {
            tv_location.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    XchatActivity_.this.onClick(view);
                }

            }
            );
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.edit_user_comment));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                        XchatActivity_.this.textChanged();
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                    }

                }
                );
            }
        }
        afterViews();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(REMOTE_USER_NAME_EXTRA)) {
                remoteUserName = extras_.getString(REMOTE_USER_NAME_EXTRA);
            }
            if (extras_.containsKey(REMOTE_USER_NICK_EXTRA)) {
                remoteUserNick = extras_.getString(REMOTE_USER_NICK_EXTRA);
            }
            if (extras_.containsKey(CHAT_TYPE_EXTRA)) {
                chatType = extras_.getString(CHAT_TYPE_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  1 :
                XchatActivity_.this.onActivityResultChatDetail(resultCode, data);
                break;
            case  10002 :
                XchatActivity_.this.onResultForCamera(resultCode, data);
                break;
            case  513 :
                XchatActivity_.this.onActivityResultGroupChat(resultCode, data);
                break;
            case  10001 :
                XchatActivity_.this.resultForSelectImag(resultCode, data);
                break;
        }
    }

    @Override
    public void onPostExecuteOpt(final Response response) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                XchatActivity_.super.onPostExecuteOpt(response);
            }

        }
        );
    }

    @Override
    public void onPostExecuteGetAppOperationList(final GetAppOperationListResponse response) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                XchatActivity_.super.onPostExecuteGetAppOperationList(response);
            }

        }
        );
    }

    @Override
    public void sendImageMsg(final String filePath) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    XchatActivity_.super.sendImageMsg(filePath);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void delMsg(final XmppMessage xmppMessage) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("test", 0, "") {


            @Override
            public void execute() {
                try {
                    XchatActivity_.super.delMsg(xmppMessage);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void doInBackgroundGetAppOperationList() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    XchatActivity_.super.doInBackgroundGetAppOperationList();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void updateReadWithNoObserver() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    XchatActivity_.super.updateReadWithNoObserver();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void doInBackgroundOperation(final String url) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("doInBackgroundOperation", 0, "doInBackgroundOperation") {


            @Override
            public void execute() {
                try {
                    XchatActivity_.super.doInBackgroundOperation(url);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void sendTextMsg(final String content) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    XchatActivity_.super.sendTextMsg(content);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void sendVoiceMsg(final float seconds, final String filePath) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    XchatActivity_.super.sendVoiceMsg(seconds, filePath);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void onCompressBitmap(final String filePaht) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    XchatActivity_.super.onCompressBitmap(filePaht);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<XchatActivity_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, XchatActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), XchatActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), XchatActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
        }

        public XchatActivity_.IntentBuilder_ remoteUserName(String remoteUserName) {
            return super.extra(REMOTE_USER_NAME_EXTRA, remoteUserName);
        }

        public XchatActivity_.IntentBuilder_ remoteUserNick(String remoteUserNick) {
            return super.extra(REMOTE_USER_NICK_EXTRA, remoteUserNick);
        }

        public XchatActivity_.IntentBuilder_ chatType(String chatType) {
            return super.extra(CHAT_TYPE_EXTRA, chatType);
        }

    }

}
