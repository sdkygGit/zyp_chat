//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.1.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.yxst.epic.unifyplatform.fragment;

import android.content.res.Resources;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.yxst.epic.unifyplatform.R.dimen;
import com.yxst.epic.unifyplatform.R.layout;
import com.yxst.epic.unifyplatform.dto.response.CheckUpdateResponse;
import com.yxst.epic.unifyplatform.dto.response.ResponseUpload;
import com.yxst.epic.unifyplatform.dto.response.SetUserAvatarResponse;
import com.yxst.epic.unifyplatform.preference.LoginPrefs_;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import org.springframework.core.NestedRuntimeException;

public final class PersonalCenterFragment_
    extends com.yxst.epic.unifyplatform.fragment.PersonalCenterFragment
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @java.lang.Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @java.lang.Override
    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @java.lang.Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.activity_personal_center, container, false);
        }
        return contentView_;
    }

    @java.lang.Override
    public void onDestroyView() {
        contentView_ = null;
        super.onDestroyView();
    }

    private void init_(Bundle savedInstanceState) {
        loginPrefs = new LoginPrefs_(getActivity());
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        Resources resources_ = getActivity().getResources();
        sizeNormal = resources_.getDimensionPixelOffset(dimen.icon_size_normal);
        sizeBigger = resources_.getDimensionPixelOffset(dimen.icon_size_bigger);
        sizeSmall = resources_.getDimensionPixelOffset(dimen.icon_size_small);
        sizeBiggest = resources_.getDimensionPixelOffset(dimen.icon_size_biggest);
        afterInject();
    }

    @java.lang.Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static PersonalCenterFragment_.FragmentBuilder_ builder() {
        return new PersonalCenterFragment_.FragmentBuilder_();
    }

    @java.lang.Override
    public void onViewChanged(HasViews hasViews) {
        tv_name = ((TextView) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.tv_name));
        btnCheckUpdate = ((Button) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.btnCheckUpdate));
        btnQr = ((ImageButton) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.btnQr));
        user_call = ((TextView) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.user_call));
        user_telephony = ((TextView) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.user_telephony));
        user_email = ((TextView) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.user_email));
        rv_user = ((RelativeLayout) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.rv_user));
        iv_icon = ((ImageView) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.iv_icon));
        tv_info_post = ((TextView) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.tv_info_post));
        if (iv_icon!= null) {
            iv_icon.setOnClickListener(new OnClickListener() {


                @java.lang.Override
                public void onClick(View view) {
                    PersonalCenterFragment_.this.iv_icon(view);
                }

            }
            );
        }
        if (btnQr!= null) {
            btnQr.setOnClickListener(new OnClickListener() {


                @java.lang.Override
                public void onClick(View view) {
                    PersonalCenterFragment_.this.onClickBtnQr();
                }

            }
            );
        }
        if (btnCheckUpdate!= null) {
            btnCheckUpdate.setOnClickListener(new OnClickListener() {


                @java.lang.Override
                public void onClick(View view) {
                    PersonalCenterFragment_.this.onClickCheckUpdate(view);
                }

            }
            );
        }
        {
            View view = hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.btnLogout);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @java.lang.Override
                    public void onClick(View view) {
                        PersonalCenterFragment_.this.onClickBtnLogout(view);
                    }

                }
                );
            }
        }
        afterviews();
    }

    @java.lang.Override
    public void checkUpdateOnPreExecute() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                PersonalCenterFragment_.super.checkUpdateOnPreExecute();
            }

        }
        );
    }

    @java.lang.Override
    public void onPostExecute(final SetUserAvatarResponse response) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                PersonalCenterFragment_.super.onPostExecute(response);
            }

        }
        );
    }

    @java.lang.Override
    public void onRestClientExceptionThrown(final NestedRuntimeException e) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                PersonalCenterFragment_.super.onRestClientExceptionThrown(e);
            }

        }
        );
    }

    @java.lang.Override
    public void onPreExecute() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                PersonalCenterFragment_.super.onPreExecute();
            }

        }
        );
    }

    @java.lang.Override
    public void checkUpdateOnPostExecute(final CheckUpdateResponse response) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                PersonalCenterFragment_.super.checkUpdateOnPostExecute(response);
            }

        }
        );
    }

    @java.lang.Override
    public void doInbackgroundExiteOnOpenfire() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    PersonalCenterFragment_.super.doInbackgroundExiteOnOpenfire();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @java.lang.Override
    public void doInBackground(final String fileUrl, final ResponseUpload responseUpload) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    PersonalCenterFragment_.super.doInBackground(fileUrl, responseUpload);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @java.lang.Override
    public void doInbackgroundCleanCache() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    PersonalCenterFragment_.super.doInbackgroundCleanCache();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @java.lang.Override
    public void checkUpdateDoInBackground() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    PersonalCenterFragment_.super.checkUpdateDoInBackground();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<PersonalCenterFragment_.FragmentBuilder_, com.yxst.epic.unifyplatform.fragment.PersonalCenterFragment>
    {


        @java.lang.Override
        public com.yxst.epic.unifyplatform.fragment.PersonalCenterFragment build() {
            PersonalCenterFragment_ fragment_ = new PersonalCenterFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }

    }

}
