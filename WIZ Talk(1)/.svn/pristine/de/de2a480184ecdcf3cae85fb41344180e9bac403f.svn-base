//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.1.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.yxst.epic.unifyplatform.fragment;

import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import com.yxst.epic.unifyplatform.DB.Member;
import com.yxst.epic.unifyplatform.R.layout;
import com.yxst.epic.unifyplatform.adapter.ContactListAdapter_;
import com.yxst.epic.unifyplatform.dto.response.GetOrgUserListResponse;
import com.yxst.epic.unifyplatform.view.PinnedHeaderPullToRefreshListView;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import org.springframework.core.NestedRuntimeException;

public final class ContactSubListFragment_
    extends com.yxst.epic.unifyplatform.fragment.ContactSubListFragment
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    public final static String MEMBER_ARG = "Member";
    public final static String IS_SELECT_MODE_ARG = "isSelectMode";
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @java.lang.Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @java.lang.Override
    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @java.lang.Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.fragment_contact_sub_list, container, false);
        }
        return contentView_;
    }

    @java.lang.Override
    public void onDestroyView() {
        contentView_ = null;
        super.onDestroyView();
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectFragmentArguments_();
        mContactSubListAdapter = ContactListAdapter_.getInstance_(getActivity());
        afterInject();
    }

    @java.lang.Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ContactSubListFragment_.FragmentBuilder_ builder() {
        return new ContactSubListFragment_.FragmentBuilder_();
    }

    @java.lang.Override
    public void onViewChanged(HasViews hasViews) {
        mPinnedHeaderListView = ((PinnedHeaderPullToRefreshListView) hasViews.findViewById(com.yxst.epic.unifyplatform.R.id.listContactSub));
        afterViews();
    }

    private void injectFragmentArguments_() {
        Bundle args_ = getArguments();
        if (args_!= null) {
            if (args_.containsKey(MEMBER_ARG)) {
                member = ((Member) args_.getSerializable(MEMBER_ARG));
            }
            if (args_.containsKey(IS_SELECT_MODE_ARG)) {
                isSelectMode = args_.getBoolean(IS_SELECT_MODE_ARG);
            }
        }
    }

    @java.lang.Override
    public void onRestClientExceptionThrown(final NestedRuntimeException e) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                ContactSubListFragment_.super.onRestClientExceptionThrown(e);
            }

        }
        );
    }

    @java.lang.Override
    public void onPreExecute() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                ContactSubListFragment_.super.onPreExecute();
            }

        }
        );
    }

    @java.lang.Override
    public void onPostExecut(final GetOrgUserListResponse response) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                ContactSubListFragment_.super.onPostExecut(response);
            }

        }
        );
    }

    @java.lang.Override
    public void doInBackground() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("getOrgUserList", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    ContactSubListFragment_.super.doInBackground();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<ContactSubListFragment_.FragmentBuilder_, com.yxst.epic.unifyplatform.fragment.ContactSubListFragment>
    {


        @java.lang.Override
        public com.yxst.epic.unifyplatform.fragment.ContactSubListFragment build() {
            ContactSubListFragment_ fragment_ = new ContactSubListFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }

        public ContactSubListFragment_.FragmentBuilder_ member(Member member) {
            args.putSerializable(MEMBER_ARG, member);
            return this;
        }

        public ContactSubListFragment_.FragmentBuilder_ isSelectMode(boolean isSelectMode) {
            args.putBoolean(IS_SELECT_MODE_ARG, isSelectMode);
            return this;
        }

    }

}
