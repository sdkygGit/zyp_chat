//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.1.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.yxst.epic.unifyplatform.activity;

import java.io.Serializable;
import java.util.List;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.app.ActivityCompat;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.TextView;
import com.skysea.group.Group;
import com.skysea.group.MemberInfo;
import com.yxst.epic.unifyplatform.DB.Member;
import com.yxst.epic.unifyplatform.R.id;
import com.yxst.epic.unifyplatform.R.layout;
import com.yxst.epic.unifyplatform.adapter.XChatDetailAdapter_;
import com.yxst.epic.unifyplatform.view.WrapContentHeightGridView;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import org.springframework.core.NestedRuntimeException;

public final class XChatDetailActivity_
    extends XChatDetailActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String REMOTE_DISPLAY_NAME_EXTRA = "remoteDisplayName";
    public final static String REMOTE_USER_NAME_EXTRA = "remoteUserName";
    public final static String FROM_WHERE_EXTRA = "fromWhere";
    public final static String LOCAL_MEMBER_EXTRA = "localMember";
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @java.lang.Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_chat_detail);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        mAdapter = XChatDetailAdapter_.getInstance_(this);
        injectExtras_();
        afterInject();
    }

    @java.lang.Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @java.lang.Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @java.lang.Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static XChatDetailActivity_.IntentBuilder_ intent(Context context) {
        return new XChatDetailActivity_.IntentBuilder_(context);
    }

    public static XChatDetailActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new XChatDetailActivity_.IntentBuilder_(fragment);
    }

    public static XChatDetailActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new XChatDetailActivity_.IntentBuilder_(supportFragment);
    }

    @java.lang.Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @java.lang.Override
    public void onViewChanged(HasViews hasViews) {
        btnSenMsg2Group = ((Button) hasViews.findViewById(id.btnSenMsg2Group));
        tvQun = ((TextView) hasViews.findViewById(id.tvQun));
        btnQuitQun = ((Button) hasViews.findViewById(id.btnQuitQun));
        mGridView = ((WrapContentHeightGridView) hasViews.findViewById(id.grid));
        trQun = hasViews.findViewById(id.trQun);
        if (trQun!= null) {
            trQun.setOnClickListener(new OnClickListener() {


                @java.lang.Override
                public void onClick(View view) {
                    XChatDetailActivity_.this.onClickTrQun(view);
                }

            }
            );
        }
        if (btnSenMsg2Group!= null) {
            btnSenMsg2Group.setOnClickListener(new OnClickListener() {


                @java.lang.Override
                public void onClick(View view) {
                    XChatDetailActivity_.this.onClickbtnSenMsg2Group();
                }

            }
            );
        }
        if (btnQuitQun!= null) {
            btnQuitQun.setOnClickListener(new OnClickListener() {


                @java.lang.Override
                public void onClick(View view) {
                    XChatDetailActivity_.this.onClickBtnQuitQun();
                }

            }
            );
        }
        afterViews();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(REMOTE_DISPLAY_NAME_EXTRA)) {
                remoteDisplayName = extras_.getString(REMOTE_DISPLAY_NAME_EXTRA);
            }
            if (extras_.containsKey(REMOTE_USER_NAME_EXTRA)) {
                remoteUserName = extras_.getString(REMOTE_USER_NAME_EXTRA);
            }
            if (extras_.containsKey(FROM_WHERE_EXTRA)) {
                fromWhere = extras_.getInt(FROM_WHERE_EXTRA);
            }
            if (extras_.containsKey(LOCAL_MEMBER_EXTRA)) {
                localMember = ((Member) extras_.getSerializable(LOCAL_MEMBER_EXTRA));
            }
        }
    }

    @java.lang.Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @java.lang.Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  1 :
                XChatDetailActivity_.this.onActivityResult(resultCode, data);
                break;
        }
    }

    @java.lang.Override
    public void onPreExecute() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                XChatDetailActivity_.super.onPreExecute();
            }

        }
        );
    }

    @java.lang.Override
    public void updateQunTopicOnPostExecute(final boolean result, final String topic) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                XChatDetailActivity_.super.updateQunTopicOnPostExecute(result, topic);
            }

        }
        );
    }

    @java.lang.Override
    public void delQunMemberOnPostExecute(final boolean result) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                XChatDetailActivity_.super.delQunMemberOnPostExecute(result);
            }

        }
        );
    }

    @java.lang.Override
    public void onRestClientExceptionThrown(final NestedRuntimeException e) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                XChatDetailActivity_.super.onRestClientExceptionThrown(e);
            }

        }
        );
    }

    @java.lang.Override
    public void addQunMemberOnPostExecute(final boolean result) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                XChatDetailActivity_.super.addQunMemberOnPostExecute(result);
            }

        }
        );
    }

    @java.lang.Override
    public void getQunMembersOnPostExecute(final Group group) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                XChatDetailActivity_.super.getQunMembersOnPostExecute(group);
            }

        }
        );
    }

    @java.lang.Override
    public void onPostExecuteQuitQun(final boolean result, final int actionType) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                XChatDetailActivity_.super.onPostExecuteQuitQun(result, actionType);
            }

        }
        );
    }

    @java.lang.Override
    public void doInBackgroundDestroyQun() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    XChatDetailActivity_.super.doInBackgroundDestroyQun();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @java.lang.Override
    public void updateQunTopicDoInBackground(final String topic) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    XChatDetailActivity_.super.updateQunTopicDoInBackground(topic);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @java.lang.Override
    public void doInBackgroundQuitQun() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    XChatDetailActivity_.super.doInBackgroundQuitQun();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @java.lang.Override
    public void addQunMemberDoInBackground(final List<Member> members) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    XChatDetailActivity_.super.addQunMemberDoInBackground(members);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @java.lang.Override
    public void getQunMembersDoInBackground(final boolean isShowProgressBar) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("getQunMembersDoInBackground", 100, "") {


            @java.lang.Override
            public void execute() {
                try {
                    XChatDetailActivity_.super.getQunMembersDoInBackground(isShowProgressBar);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @java.lang.Override
    public void delMemberDoInBackground(final MemberInfo member) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    XChatDetailActivity_.super.delMemberDoInBackground(member);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<XChatDetailActivity_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, XChatDetailActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), XChatDetailActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), XChatDetailActivity_.class);
            fragmentSupport_ = fragment;
        }

        @java.lang.Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
        }

        public XChatDetailActivity_.IntentBuilder_ remoteDisplayName(String remoteDisplayName) {
            return super.extra(REMOTE_DISPLAY_NAME_EXTRA, remoteDisplayName);
        }

        public XChatDetailActivity_.IntentBuilder_ remoteUserName(String remoteUserName) {
            return super.extra(REMOTE_USER_NAME_EXTRA, remoteUserName);
        }

        public XChatDetailActivity_.IntentBuilder_ fromWhere(int fromWhere) {
            return super.extra(FROM_WHERE_EXTRA, fromWhere);
        }

        public XChatDetailActivity_.IntentBuilder_ localMember(Member localMember) {
            return super.extra(LOCAL_MEMBER_EXTRA, ((Serializable) localMember));
        }

    }

}
