package com.yxst.epic.unifyplatform.view;

import android.content.Context;
import android.graphics.Bitmap;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;

import com.epic.traverse.push.util.L;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.ImageScaleType;
import com.nostra13.universalimageloader.core.assist.ImageSize;
import com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer;
import com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener;
import com.yxst.epic.unifyplatform.DB.MsgInFo;
import com.yxst.epic.unifyplatform.DB.XmppDbMessage;
import com.yxst.epic.unifyplatform.DB.XmppMessage;
import com.yxst.epic.unifyplatform.R;
import com.yxst.epic.unifyplatform.activity.XchatImageActivity_;
import com.yxst.epic.unifyplatform.utils.ImagerLoaderOptHelper;
import com.yxst.epic.unifyplatform.utils.MessageUtils;

import org.androidannotations.annotations.Click;
import org.androidannotations.annotations.EViewGroup;
import org.androidannotations.annotations.LongClick;
import org.androidannotations.annotations.ViewById;


/**
 * 显示接收图片的view
 * Created by Dong on 2015/10/13.
 */
@EViewGroup(R.layout.item_chat_received_image)
public class ChatItemReceiveImageView extends ChatItemView {

    @ViewById
    ImageView iv_picture;

    @ViewById
    TextView tv_name;

    public ChatItemReceiveImageView(Context context) {
        super(context);
    }

    @Override
    public void bind(XmppMessage message) {
        super.bind(message);
    }

    @Override
    public void bindOther(XmppMessage message) {
        if (XmppDbMessage.isGroupChatMessage(message)) {
            tv_name.setText(message.getExtLocalDisplayName());
        } else {
            tv_name.setVisibility(View.GONE);
        }
        if (!TextUtils.isEmpty(String.valueOf(message.getMold()))) {
            if (message.getMold() == MsgInFo.MOLD_IMG) {


                displayImagebyUrl(iv_picture, message.getFilePath());
            }
        }
    }


    /**
     * 显示 图片信息
     *
     * @param iv_picture
     * @param strUrl
     */
    protected void displayImagebyUrl(final ImageView iv_picture,
                                     final String strUrl) {

        // TODO: 2016/4/8
        if (iv_picture != null && iv_picture.getTag() != null && !TextUtils.isEmpty(iv_picture.getTag()
                .toString()) && iv_picture.getTag()
                .equals(strUrl)) {

            return;
        }

        Bitmap bitmapFromCache = ImagerLoaderOptHelper.getBitmapFromCache(strUrl, new
                ImageSize(pictureSizeWidth, pictureSizeheight));
        if (bitmapFromCache != null) {
            iv_picture.setImageBitmap(bitmapFromCache);
            iv_picture.setTag(strUrl);
            L.d(TAG, "display bitmap from cache");
            return;
        }


        DisplayImageOptions options = new DisplayImageOptions.Builder()
                .showImageOnLoading(R.drawable.chat_nopicture)
                .showImageForEmptyUri(R.drawable.chat_nopicture)
                .showImageOnFail(R.drawable.card_photofail)
                .cacheInMemory(true)
                .cacheOnDisk(true)
                .imageScaleType(ImageScaleType.EXACTLY)
                .displayer(new SimpleBitmapDisplayer())
                .resetViewBeforeLoading(false)// 设置图片在下载前是否重置，复位
                .build();


        ImageLoader.getInstance().displayImage(strUrl, iv_picture,
                options, new SimpleImageLoadingListener() {
                    @Override
                    public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
                        super.onLoadingComplete(imageUri, view, loadedImage);
                        ImagerLoaderOptHelper.putCache(strUrl, new
                                ImageSize(pictureSizeWidth, pictureSizeheight), loadedImage);
                        iv_picture.setTag(strUrl);
                    }
                });

    }

    @Click
    void iv_picture() {
        XchatImageActivity_.intent(getContext()).pathUrl(message.getFilePath()).start();
    }

    @LongClick(R.id.iv_picture)
    public void ivPictureLongClick() {
        Log.d(TAG, "ivPictureLongClick()");
        initPopupWindow();
        showPopuWindow(iv_picture);
    }
}
