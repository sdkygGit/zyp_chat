//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.1.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.yxst.epic.unifyplatform.view;

import android.content.Context;
import android.content.res.Resources;
import android.util.AttributeSet;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.TextView;
import com.yxst.epic.unifyplatform.R.dimen;
import com.yxst.epic.unifyplatform.R.id;
import com.yxst.epic.unifyplatform.R.layout;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;


/**
 * We use @SuppressWarning here because our java code
 * generator doesn't know that there is no need
 * to import OnXXXListeners from View as we already
 * are in a View.
 * 
 */
@SuppressWarnings("unused")
public final class ContactItemSelectView_
    extends ContactItemSelectView
    implements HasViews, OnViewChangedListener
{

    private boolean alreadyInflated_ = false;
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    public ContactItemSelectView_(Context context) {
        super(context);
        init_();
    }

    public ContactItemSelectView_(Context context, AttributeSet attrs) {
        super(context, attrs);
        init_();
    }

    public ContactItemSelectView_(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        init_();
    }

    public static ContactItemSelectView build(Context context) {
        ContactItemSelectView_ instance = new ContactItemSelectView_(context);
        instance.onFinishInflate();
        return instance;
    }

    /**
     * The mAlreadyInflated_ hack is needed because of an Android bug
     * which leads to infinite calls of onFinishInflate()
     * when inflating a layout with a parent and using
     * the <merge /> tag.
     * 
     */
    @Override
    public void onFinishInflate() {
        if (!alreadyInflated_) {
            alreadyInflated_ = true;
            inflate(getContext(), layout.list_item_contact_select, this);
            onViewChangedNotifier_.notifyViewChanged(this);
        }
        super.onFinishInflate();
    }

    private void init_() {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        {
            OnViewChangedNotifier.registerOnViewChangedListener(this);
            Resources resources_ = getContext().getResources();
            size = resources_.getDimensionPixelOffset(dimen.icon_size_small);
        }
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    public static ContactItemSelectView build(Context context, AttributeSet attrs) {
        ContactItemSelectView_ instance = new ContactItemSelectView_(context, attrs);
        instance.onFinishInflate();
        return instance;
    }

    public static ContactItemSelectView build(Context context, AttributeSet attrs, int defStyle) {
        ContactItemSelectView_ instance = new ContactItemSelectView_(context, attrs, defStyle);
        instance.onFinishInflate();
        return instance;
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        mIconView = ((ImageView) hasViews.findViewById(id.iv_icon));
        mNameView = ((TextView) hasViews.findViewById(id.tv_name));
        ivDel = ((ImageView) hasViews.findViewById(id.ivDel));
        if (ivDel!= null) {
            ivDel.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    ContactItemSelectView_.this.onClickDel();
                }

            }
            );
        }
    }

}
