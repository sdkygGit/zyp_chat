//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.1.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.yxst.epic.unifyplatform.activity;

import android.app.Activity;
import android.content.Context;
import android.content.res.Resources;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.support.v4.app.ActivityCompat;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.yxst.epic.unifyplatform.R.dimen;
import com.yxst.epic.unifyplatform.R.id;
import com.yxst.epic.unifyplatform.R.layout;
import com.yxst.epic.unifyplatform.dto.response.CheckUpdateResponse;
import com.yxst.epic.unifyplatform.preference.LoginPrefs_;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import org.springframework.core.NestedRuntimeException;

public final class PersonalCenterActivity_
    extends PersonalCenterActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @java.lang.Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_personal_center);
    }

    private void init_(Bundle savedInstanceState) {
        loginPrefs = new LoginPrefs_(this);
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        Resources resources_ = this.getResources();
        sizeBigger = resources_.getDimensionPixelOffset(dimen.icon_size_my);
        afterInject();
    }

    @java.lang.Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @java.lang.Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @java.lang.Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static PersonalCenterActivity_.IntentBuilder_ intent(Context context) {
        return new PersonalCenterActivity_.IntentBuilder_(context);
    }

    public static PersonalCenterActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new PersonalCenterActivity_.IntentBuilder_(fragment);
    }

    public static PersonalCenterActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new PersonalCenterActivity_.IntentBuilder_(supportFragment);
    }

    @java.lang.Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @java.lang.Override
    public void onViewChanged(HasViews hasViews) {
        user_email = ((TextView) hasViews.findViewById(id.user_email));
        tv_info_post = ((TextView) hasViews.findViewById(id.tv_info_post));
        btnCheckUpdate = ((Button) hasViews.findViewById(id.btnCheckUpdate));
        user_telephony = ((TextView) hasViews.findViewById(id.user_telephony));
        user_call = ((TextView) hasViews.findViewById(id.user_call));
        tv_name = ((TextView) hasViews.findViewById(id.tv_name));
        iv_icon = ((ImageView) hasViews.findViewById(id.iv_icon));
        rv_user = ((RelativeLayout) hasViews.findViewById(id.rv_user));
        if (btnCheckUpdate!= null) {
            btnCheckUpdate.setOnClickListener(new OnClickListener() {


                @java.lang.Override
                public void onClick(View view) {
                    PersonalCenterActivity_.this.onClickCheckUpdate(view);
                }

            }
            );
        }
        {
            View view = hasViews.findViewById(id.btnLogout);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @java.lang.Override
                    public void onClick(View view) {
                        PersonalCenterActivity_.this.onClickBtnLogout(view);
                    }

                }
                );
            }
        }
        afterviews();
    }

    @java.lang.Override
    public void onRestClientExceptionThrown(final NestedRuntimeException e) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                PersonalCenterActivity_.super.onRestClientExceptionThrown(e);
            }

        }
        );
    }

    @java.lang.Override
    public void checkUpdateOnPostExecute(final CheckUpdateResponse response) {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                PersonalCenterActivity_.super.checkUpdateOnPostExecute(response);
            }

        }
        );
    }

    @java.lang.Override
    public void checkUpdateOnPreExecute() {
        handler_.post(new Runnable() {


            @java.lang.Override
            public void run() {
                PersonalCenterActivity_.super.checkUpdateOnPreExecute();
            }

        }
        );
    }

    @java.lang.Override
    public void doInbackgroundExiteOnOpenfire() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    PersonalCenterActivity_.super.doInbackgroundExiteOnOpenfire();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @java.lang.Override
    public void checkUpdateDoInBackground() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @java.lang.Override
            public void execute() {
                try {
                    PersonalCenterActivity_.super.checkUpdateDoInBackground();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<PersonalCenterActivity_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, PersonalCenterActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), PersonalCenterActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), PersonalCenterActivity_.class);
            fragmentSupport_ = fragment;
        }

        @java.lang.Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
        }

    }

}
